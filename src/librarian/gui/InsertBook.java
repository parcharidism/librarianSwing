package librarian.gui;

import com.formdev.flatlaf.FlatLightLaf;
import java.io.File;
import java.io.IOException;
import java.net.URLDecoder;
import java.nio.file.Files;
import java.nio.file.StandardCopyOption;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.UIManager;
import librarian.handlers.AuthorsHandler;
import librarian.handlers.BookHandler;
import librarian.handlers.PublHouseHandler;
import librarian.handlers.LendHandler;
import librarian.handlers.LogHandler;
import librarian.utils.User;

/**
 *
 * @author Miltiadis Parcharidis 011873
 */
public class InsertBook extends javax.swing.JFrame {

    private ArrayList bookCatiDs = new ArrayList();
    private ArrayList publiDs = new ArrayList();
    private ArrayList lendiDs = new ArrayList();
    private ArrayList authoriDs = new ArrayList();

    /**
     * Creates new form InsertUser
     */
    public InsertBook() {
        initComponents();

        ResultSet rsB = BookHandler.selectBookCategories();
        bookCatCombo.addItem("- Select Category - ");
        bookCatiDs.add("");
        try {
            while (rsB.next()) {
                bookCatiDs.add(rsB.getString(1));
                bookCatCombo.addItem(rsB.getString(2));

            }
        } catch (SQLException ex) {
            Logger.getLogger(InsertBook.class.getName()).log(Level.SEVERE, null, ex);
        }
        bookCatCombo.setSelectedIndex(0);

        ResultSet rsA = AuthorsHandler.selectAuthors(0, -1, null); // δείξτους όλους
        int row = 0;

        try {
            while (rsA.next()) {
                jTableAuthors.getModel().setValueAt(rsA.getInt(1), row, 0);
                authoriDs.add(rsA.getInt(1));
                jTableAuthors.getModel().setValueAt(rsA.getString(2), row, 1);
                jTableAuthors.getModel().setValueAt(rsA.getString(3), row, 2);
                jTableAuthors.getModel().setValueAt(rsA.getString(4), row, 3);
                row++;
            }
        } catch (SQLException ex) {
            Logger.getLogger(ViewUsers.class.getName()).log(Level.SEVERE, null, ex);
        }

        ResultSet rsPub = PublHouseHandler.selectPublHouses();

        publHouseCombo.addItem("- Select Publishing House - ");
        publiDs.add("");
        try {
            while (rsPub.next()) {
                publiDs.add(rsPub.getInt(1));
                publHouseCombo.addItem(rsPub.getString(2) + " - founded: " + rsPub.getString(3).substring(0, 4));
            }
        } catch (SQLException ex) {
            Logger.getLogger(InsertBook.class.getName()).log(Level.SEVERE, null, ex);
        }
        publHouseCombo.setSelectedIndex(0);

        ResultSet rsL = LendHandler.selectLendCategories();

        lendCatCombo.addItem("- Select Lend Category - ");
        lendiDs.add("");
        try {
            while (rsL.next()) {
                lendiDs.add(rsL.getInt(1));
                lendCatCombo.addItem(rsL.getString(2));
            }
        } catch (SQLException ex) {
            Logger.getLogger(InsertBook.class.getName()).log(Level.SEVERE, null, ex);
        }
        lendCatCombo.setSelectedIndex(0);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        dialogAbout = new javax.swing.JDialog();
        panelAbout = new javax.swing.JPanel();
        buttonOK = new javax.swing.JButton();
        labelImage = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        textAreaAbout = new javax.swing.JTextArea();
        jPanel1 = new javax.swing.JPanel();
        UIManager.put("ComboBox.selectionBackground", new java.awt.Color(201,210,216));
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        titleTxt = new javax.swing.JTextField();
        publDateTxt = new javax.swing.JTextField();
        bookCatCombo = new javax.swing.JComboBox<>();
        resetBtn = new javax.swing.JButton();
        insertBtn = new javax.swing.JButton();
        backBtn = new javax.swing.JButton();
        lendCatCombo = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableAuthors = new javax.swing.JTable();
        jTableAuthors.getTableHeader().setOpaque(false);
        jTableAuthors.getTableHeader().setBackground(new java.awt.Color(201,210,216));
        publHouseCombo = new javax.swing.JComboBox<>();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        isbnTxt = new javax.swing.JTextField();
        labelBrowse = new javax.swing.JLabel();
        browseBtn = new javax.swing.JButton();
        isbnNotify = new javax.swing.JLabel();
        browseNotify = new javax.swing.JLabel();
        labelFullname = new javax.swing.JLabel();
        logOutBtn = new javax.swing.JButton();
        stockSpinner = new javax.swing.JSpinner();
        stockNotify = new javax.swing.JLabel();
        menuBar = new javax.swing.JMenuBar();
        menuFile = new javax.swing.JMenu();
        menuViewLog = new javax.swing.JMenuItem();
        menuLogout = new javax.swing.JMenuItem();
        menuBooks = new javax.swing.JMenu();
        menuLend = new javax.swing.JMenuItem();
        menuReturn = new javax.swing.JMenuItem();
        menuInsert = new javax.swing.JMenuItem();
        menuSearch = new javax.swing.JMenuItem();
        menuAuthors = new javax.swing.JMenu();
        menuAuthorInsert = new javax.swing.JMenuItem();
        menuViewAuthor = new javax.swing.JMenuItem();
        menuUsers = new javax.swing.JMenu();
        menuUser = new javax.swing.JMenuItem();
        jMenuItem1 = new javax.swing.JMenuItem();
        menuHelp = new javax.swing.JMenu();
        jMenuItem4 = new javax.swing.JMenuItem();

        dialogAbout.setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        dialogAbout.setTitle("About this app");
        dialogAbout.setBackground(new java.awt.Color(156, 193, 194));
        dialogAbout.setResizable(false);
        dialogAbout.setSize(new java.awt.Dimension(439, 242));

        panelAbout.setBackground(new java.awt.Color(156, 193, 194));
        panelAbout.setBorder(javax.swing.BorderFactory.createEtchedBorder(javax.swing.border.EtchedBorder.RAISED));
        panelAbout.setPreferredSize(new java.awt.Dimension(427, 230));

        buttonOK.setText("OK");
        buttonOK.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonOKActionPerformed(evt);
            }
        });

        labelImage.setIcon(new javax.swing.ImageIcon(getClass().getResource("/external/images/libraryAbout.png"))); // NOI18N
        labelImage.setToolTipText("Library logo");

        jScrollPane2.setHorizontalScrollBar(null);

        textAreaAbout.setEditable(false);
        textAreaAbout.setBackground(new java.awt.Color(156, 193, 194));
        textAreaAbout.setColumns(20);
        textAreaAbout.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        textAreaAbout.setForeground(new java.awt.Color(140, 112, 104));
        textAreaAbout.setRows(5);
        textAreaAbout.setText("Librarian App\n\nCreated by SoftGen Inc.\n\nversion: 1.41\nRelease date: 01/12/2024");
        textAreaAbout.setToolTipText("About this application");
        textAreaAbout.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(201, 210, 216), 3, true));
        textAreaAbout.setMargin(new java.awt.Insets(6, 6, 6, 6));
        textAreaAbout.setSelectedTextColor(new java.awt.Color(201, 210, 216));
        textAreaAbout.setSelectionColor(new java.awt.Color(140, 112, 104));
        jScrollPane2.setViewportView(textAreaAbout);

        javax.swing.GroupLayout panelAboutLayout = new javax.swing.GroupLayout(panelAbout);
        panelAbout.setLayout(panelAboutLayout);
        panelAboutLayout.setHorizontalGroup(
            panelAboutLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelAboutLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(labelImage, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 234, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(panelAboutLayout.createSequentialGroup()
                .addGap(180, 180, 180)
                .addComponent(buttonOK)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        panelAboutLayout.setVerticalGroup(
            panelAboutLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelAboutLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelAboutLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(labelImage, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(buttonOK)
                .addContainerGap(23, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout dialogAboutLayout = new javax.swing.GroupLayout(dialogAbout.getContentPane());
        dialogAbout.getContentPane().setLayout(dialogAboutLayout);
        dialogAboutLayout.setHorizontalGroup(
            dialogAboutLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(dialogAboutLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(panelAbout, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        dialogAboutLayout.setVerticalGroup(
            dialogAboutLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(dialogAboutLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(panelAbout, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Register a new book to the library");
        setResizable(false);
        setSize(new java.awt.Dimension(950, 750));

        jPanel1.setBackground(new java.awt.Color(156, 193, 194));
        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder(javax.swing.border.EtchedBorder.RAISED));
        jPanel1.setPreferredSize(new java.awt.Dimension(950, 750));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(140, 112, 104));
        jLabel1.setText("Register New Book");

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(140, 112, 104));
        jLabel2.setText("Title:");

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(140, 112, 104));
        jLabel3.setText("Category:");

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(140, 112, 104));
        jLabel4.setText("Authors:");

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(140, 112, 104));
        jLabel5.setText("Publish Date:");

        jLabel6.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(140, 112, 104));
        jLabel6.setText("Publishing House:");

        jLabel7.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(140, 112, 104));
        jLabel7.setText("Lend Category:");

        titleTxt.setToolTipText("Please type the title of the book");
        titleTxt.setSelectionColor(new java.awt.Color(190, 132, 81));
        titleTxt.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                titleTxtFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                titleTxtFocusLost(evt);
            }
        });

        publDateTxt.setText("dd/mm/yyyy");
        publDateTxt.setToolTipText("Enter the publishing date");
        publDateTxt.setSelectionColor(new java.awt.Color(190, 132, 81));
        publDateTxt.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                publDateTxtFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                publDateTxtFocusLost(evt);
            }
        });

        bookCatCombo.setToolTipText("Choose Book category based on its content");
        bookCatCombo.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                bookCatComboFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                bookCatComboFocusLost(evt);
            }
        });

        resetBtn.setText("Clear");
        resetBtn.setToolTipText("Reset the form fields");
        resetBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                resetBtnMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                resetBtnMouseExited(evt);
            }
        });
        resetBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resetBtnActionPerformed(evt);
            }
        });

        insertBtn.setText("Register Book");
        insertBtn.setToolTipText("Register the new book to the library");
        insertBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                insertBtnMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                insertBtnMouseExited(evt);
            }
        });
        insertBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                insertBtnActionPerformed(evt);
            }
        });

        backBtn.setText("<< Back");
        backBtn.setToolTipText("Return to main menu without saving changes");
        backBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                backBtnMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                backBtnMouseExited(evt);
            }
        });
        backBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backBtnActionPerformed(evt);
            }
        });

        lendCatCombo.setToolTipText("Choose lending category for the book");
        lendCatCombo.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                lendCatComboFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                lendCatComboFocusLost(evt);
            }
        });

        jTableAuthors.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "ID", "Name", "Surname", "Country"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTableAuthors.setToolTipText("Select authors (max 3)");
        jTableAuthors.setSelectionBackground(new java.awt.Color(201, 210, 216));
        jTableAuthors.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableAuthorsMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTableAuthors);
        if (jTableAuthors.getColumnModel().getColumnCount() > 0) {
            jTableAuthors.getColumnModel().getColumn(0).setMinWidth(40);
            jTableAuthors.getColumnModel().getColumn(0).setPreferredWidth(40);
            jTableAuthors.getColumnModel().getColumn(0).setMaxWidth(40);
            jTableAuthors.getColumnModel().getColumn(3).setMinWidth(80);
            jTableAuthors.getColumnModel().getColumn(3).setPreferredWidth(80);
            jTableAuthors.getColumnModel().getColumn(3).setMaxWidth(80);
        }

        publHouseCombo.setToolTipText("Choose the publishing house of the book");
        publHouseCombo.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                publHouseComboFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                publHouseComboFocusLost(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(140, 112, 104));
        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel8.setText("ISBN 10-13:");

        jLabel9.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(140, 112, 104));
        jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel9.setText("Stock:");

        isbnTxt.setToolTipText("10 or 13 ISBN of Book, numbers only");
        isbnTxt.setSelectionColor(new java.awt.Color(190, 132, 81));
        isbnTxt.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                isbnTxtFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                isbnTxtFocusLost(evt);
            }
        });
        isbnTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                isbnTxtActionPerformed(evt);
            }
        });

        labelBrowse.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        labelBrowse.setForeground(new java.awt.Color(140, 112, 104));
        labelBrowse.setText("Image Cover:");

        browseBtn.setText("Browse Image");
        browseBtn.setToolTipText("Browse for a book cover");
        browseBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                browseBtnMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                browseBtnMouseExited(evt);
            }
        });
        browseBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                browseBtnActionPerformed(evt);
            }
        });

        isbnNotify.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        isbnNotify.setForeground(new java.awt.Color(193, 81, 135));

        browseNotify.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        browseNotify.setForeground(new java.awt.Color(193, 81, 135));

        labelFullname.setText(User.getName() + " " + User.getSurname());
        labelFullname.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        labelFullname.setText(User.getName() + " " + User.getSurname());
        labelFullname.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);

        logOutBtn.setBackground(new java.awt.Color(156, 193, 194));
        logOutBtn.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        logOutBtn.setForeground(new java.awt.Color(255, 255, 255));
        logOutBtn.setMnemonic('O');
        logOutBtn.setText("Log Out");
        logOutBtn.setBorder(null);
        logOutBtn.setBorderPainted(false);
        logOutBtn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        logOutBtn.setDisplayedMnemonicIndex(4);
        logOutBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                logOutBtnMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                logOutBtnMouseExited(evt);
            }
        });
        logOutBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                logOutBtnActionPerformed(evt);
            }
        });

        stockSpinner.setToolTipText("Enter stock quantity");
        stockSpinner.setEditor(new javax.swing.JSpinner.NumberEditor(stockSpinner, ""));
        stockSpinner.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                stockSpinnerFocusGained(evt);
            }
        });

        stockNotify.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        stockNotify.setForeground(new java.awt.Color(193, 81, 135));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel7, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel9, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelBrowse, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel8, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(backBtn, javax.swing.GroupLayout.Alignment.TRAILING))
                .addGap(25, 25, 25)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(labelFullname, javax.swing.GroupLayout.PREFERRED_SIZE, 243, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(logOutBtn)
                        .addGap(28, 28, 28))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(titleTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 452, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(publDateTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(isbnTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(isbnNotify, javax.swing.GroupLayout.PREFERRED_SIZE, 476, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(publHouseCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 286, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(bookCatCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lendCatCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(stockSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(stockNotify, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 560, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(insertBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(browseBtn, javax.swing.GroupLayout.DEFAULT_SIZE, 113, Short.MAX_VALUE))
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(browseNotify, javax.swing.GroupLayout.PREFERRED_SIZE, 209, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(74, 74, 74)
                                        .addComponent(resetBtn)))))
                        .addContainerGap(215, Short.MAX_VALUE))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addComponent(jLabel1))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(logOutBtn)
                            .addComponent(labelFullname))))
                .addGap(16, 16, 16)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(titleTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bookCatCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 216, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(13, 13, 13)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(publDateTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(publHouseCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lendCatCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(isbnTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8)
                    .addComponent(isbnNotify, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(stockSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(stockNotify))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(browseBtn)
                    .addComponent(labelBrowse)
                    .addComponent(browseNotify))
                .addGap(40, 40, 40)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(insertBtn)
                    .addComponent(backBtn)
                    .addComponent(resetBtn))
                .addContainerGap(19, Short.MAX_VALUE))
        );

        menuBar.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        menuFile.setMnemonic('O');
        menuFile.setText("File");
        menuFile.setToolTipText("Actions about the Application");
        menuFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuFileActionPerformed(evt);
            }
        });

        menuViewLog.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_G, java.awt.event.InputEvent.ALT_DOWN_MASK));
        menuViewLog.setMnemonic('g');
        menuViewLog.setText("View Log");
        menuViewLog.setToolTipText("Examine the application log");
        menuViewLog.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuViewLogActionPerformed(evt);
            }
        });
        menuFile.add(menuViewLog);

        menuLogout.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_O, java.awt.event.InputEvent.ALT_DOWN_MASK));
        menuLogout.setText("Logout");
        menuLogout.setToolTipText("Exit safely from the application");
        menuLogout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuLogoutActionPerformed(evt);
            }
        });
        menuFile.add(menuLogout);

        menuBar.add(menuFile);

        menuBooks.setMnemonic('S');
        menuBooks.setText("Books");
        menuBooks.setToolTipText("Actions about Books");
        menuBooks.addMenuListener(new javax.swing.event.MenuListener() {
            public void menuCanceled(javax.swing.event.MenuEvent evt) {
            }
            public void menuDeselected(javax.swing.event.MenuEvent evt) {
            }
            public void menuSelected(javax.swing.event.MenuEvent evt) {
                menuBooksMenuSelected(evt);
            }
        });
        menuBooks.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                menuBooksMouseEntered(evt);
            }
        });
        menuBooks.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuBooksActionPerformed(evt);
            }
        });

        menuLend.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_L, java.awt.event.InputEvent.ALT_DOWN_MASK));
        menuLend.setMnemonic('L');
        menuLend.setText("Lend a Book");
        menuLend.setToolTipText("Lend a book to a user");
        menuLend.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                menuLendStateChanged(evt);
            }
        });
        menuLend.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                menuLendMouseEntered(evt);
            }
        });
        menuLend.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuLendActionPerformed(evt);
            }
        });
        menuBooks.add(menuLend);

        menuReturn.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_R, java.awt.event.InputEvent.ALT_DOWN_MASK));
        menuReturn.setMnemonic('R');
        menuReturn.setText("Return Book");
        menuReturn.setToolTipText("Return a book to the Library");
        menuReturn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuReturnActionPerformed(evt);
            }
        });
        menuBooks.add(menuReturn);

        menuInsert.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_I, java.awt.event.InputEvent.ALT_DOWN_MASK));
        menuInsert.setMnemonic('I');
        menuInsert.setText("Register Book");
        menuInsert.setToolTipText("Register a new book to the Library");
        menuInsert.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuInsertActionPerformed(evt);
            }
        });
        menuBooks.add(menuInsert);

        menuSearch.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.ALT_DOWN_MASK));
        menuSearch.setMnemonic('S');
        menuSearch.setText("Browse Books");
        menuSearch.setToolTipText("Find books based on title");
        menuSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuSearchActionPerformed(evt);
            }
        });
        menuBooks.add(menuSearch);

        menuBar.add(menuBooks);

        menuAuthors.setText("Authors");
        menuAuthors.setToolTipText("Actions about Authors");

        menuAuthorInsert.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_A, java.awt.event.InputEvent.ALT_DOWN_MASK));
        menuAuthorInsert.setMnemonic('A');
        menuAuthorInsert.setText("Insert Author");
        menuAuthorInsert.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuAuthorInsertActionPerformed(evt);
            }
        });
        menuAuthors.add(menuAuthorInsert);

        menuViewAuthor.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_V, java.awt.event.InputEvent.ALT_DOWN_MASK));
        menuViewAuthor.setMnemonic('V');
        menuViewAuthor.setText("View/Edit Author");
        menuViewAuthor.setToolTipText("View or Edit Authors");
        menuViewAuthor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuViewAuthorActionPerformed(evt);
            }
        });
        menuAuthors.add(menuViewAuthor);

        menuBar.add(menuAuthors);

        menuUsers.setText("Users");
        menuUsers.setToolTipText("Actions about Users");
        menuUsers.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuUsersActionPerformed(evt);
            }
        });

        menuUser.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_U, java.awt.event.InputEvent.ALT_DOWN_MASK));
        menuUser.setMnemonic('U');
        menuUser.setText("Insert User");
        menuUser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuUserActionPerformed(evt);
            }
        });
        menuUsers.add(menuUser);

        jMenuItem1.setText("View/Edit User");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        menuUsers.add(jMenuItem1);

        menuBar.add(menuUsers);

        menuHelp.setText("Help");
        menuHelp.setToolTipText("Find help for issues");

        jMenuItem4.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_B, java.awt.event.InputEvent.ALT_DOWN_MASK));
        jMenuItem4.setMnemonic('b');
        jMenuItem4.setText("About");
        jMenuItem4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem4ActionPerformed(evt);
            }
        });
        menuHelp.add(jMenuItem4);

        menuBar.add(menuHelp);

        setJMenuBar(menuBar);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 680, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void browseBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_browseBtnActionPerformed
        if (titleTxt.getText().equalsIgnoreCase("")) {
            browseNotify.setText("Please type the book title first");
            titleTxt.requestFocus();
            return;
        }
        JFileChooser chooser = new JFileChooser();
        chooser.showOpenDialog(null);
        File src = chooser.getSelectedFile();

        String path = InsertBook.class.getProtectionDomain().getCodeSource().getLocation().getPath();
        try {
            String decodedPath = URLDecoder.decode(path, "UTF-8");
            int countslash = decodedPath.length() - decodedPath.replace("/", "").length();
            countslash -= 2;

            String finalPath = "";
            int counting = 0;
            for (int i = 0; i < decodedPath.length(); i++) {
                finalPath += decodedPath.charAt(i);
                if (decodedPath.charAt(i) == '/') {
                    counting++;
                }
                if (counting == 6) {
                    break;
                }
            }
            String titleImage = titleTxt.getText().replaceAll("[^A-Za-z0-9\\s]", "");
            finalPath += "src/external/images/bookImages/" + titleImage + ".jpg";
            File dest = new File(finalPath);
            System.out.println(dest.getPath());
            Files.copy(src.toPath(), dest.toPath(), StandardCopyOption.REPLACE_EXISTING);

        } catch (IOException ex) {
            Logger.getLogger(InsertBook.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_browseBtnActionPerformed

    private void isbnTxtFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_isbnTxtFocusLost
        if (!isbnTxt.getText().equalsIgnoreCase("")) {
            String digits = isbnTxt.getText().replaceAll("[^0-9]", "");

            if (!isbnTxt.getText().equalsIgnoreCase(digits)) {
                isbnNotify.setText("ISBN should contain only numbers, please adjust accordingly");
                isbnTxt.setFont(new java.awt.Font("Segoe UI", 1, 12));
                isbnTxt.setBackground(new java.awt.Color(193, 81, 135));
                isbnTxt.setForeground(new java.awt.Color(255, 255, 255));
                
            } else {
                isbnNotify.setText("");
                isbnTxt.setFont(new java.awt.Font("Segoe UI", 0, 12));
                isbnTxt.setBackground(new java.awt.Color(255, 255, 255));
                isbnTxt.setForeground(new java.awt.Color(0, 0, 0));
                
            }
        }
        else if (isbnTxt.getText().equalsIgnoreCase("") && isbnNotify.getText().equalsIgnoreCase("")) {
            isbnTxt.setBackground(new java.awt.Color(255,255,255));
        }
        
    }//GEN-LAST:event_isbnTxtFocusLost

    private void backBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backBtnActionPerformed
        this.setVisible(false);
        MenuAdmin menuAdmin = new MenuAdmin();
        menuAdmin.setVisible(true);
    }//GEN-LAST:event_backBtnActionPerformed

    private void insertBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_insertBtnActionPerformed
        if ((Integer) stockSpinner.getValue() < 1) {
            stockNotify.setText("Stock is expected to be greater than 1");
            stockSpinner.setFont(new java.awt.Font("Segoe UI", 1, 12));
            stockSpinner.setForeground(new java.awt.Color(255, 255, 255));
            stockSpinner.requestFocus();
            stockSpinner.setBackground(new java.awt.Color(193, 81, 135));
            return;
        } else {
            stockSpinner.setFont(new java.awt.Font("Segoe UI", 0, 12));
            stockSpinner.setForeground(new java.awt.Color(0, 0, 0));
            stockSpinner.setBackground(new java.awt.Color(255, 255, 255));
            stockNotify.setText("");
        }
        /**
         * bookCatiDs publiDs IMPLEMENTATION lendiDs
         */
        // Prepare values
        String title = titleTxt.getText();
        int bookcat = bookCatCombo.getSelectedIndex();
        int rows[] = jTableAuthors.getSelectedRows();
        int authors[] = new int[rows.length];
        for (int i = 0; i < rows.length; i++) {
            authors[i] = (Integer) authoriDs.get(rows[i]);

        }

        String pubDate = publDateTxt.getText();
        int publisher = publHouseCombo.getSelectedIndex();
        int lendcat = lendCatCombo.getSelectedIndex();
        String isbn = isbnTxt.getText();
        int stock = (Integer) stockSpinner.getValue();

        // Execute
        boolean inserted = BookHandler.insertBook(title,
                bookcat, authors, pubDate,
                publisher, lendcat, isbn, stock);

        if (inserted) {
            JOptionPane.showMessageDialog(null, "Book Inserted successfully", "Register New Book", JOptionPane.INFORMATION_MESSAGE);
            this.setVisible(false);
            MenuAdmin menuAdmin = new MenuAdmin();
        menuAdmin.setVisible(true);
        } else {
            JOptionPane.showMessageDialog(null, "Error While Inserting Book!", "Register New Book", JOptionPane.WARNING_MESSAGE);
            this.setVisible(false);
        }
    }//GEN-LAST:event_insertBtnActionPerformed

    private void resetBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resetBtnActionPerformed
        titleTxt.setText("");
        bookCatCombo.setSelectedIndex(0);
        publDateTxt.setText("dd/mm/yyyy");
        publHouseCombo.setSelectedIndex(0);
        lendCatCombo.setSelectedIndex(0);
        isbnTxt.setText("");
        stockSpinner.setValue(1);
        jTableAuthors.clearSelection();
        isbnNotify.setText("");
        browseNotify.setText("");
    }//GEN-LAST:event_resetBtnActionPerformed

    private void publDateTxtFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_publDateTxtFocusLost
        publDateTxt.setBackground(new java.awt.Color(255,255,255));
        if (publDateTxt.getText().equalsIgnoreCase("")) {
            publDateTxt.setFont(new java.awt.Font("Segoe UI", 2, 12));
            publDateTxt.setText("dd/mm/yyyy");
        }
    }//GEN-LAST:event_publDateTxtFocusLost

    private void publDateTxtFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_publDateTxtFocusGained
        publDateTxt.setBackground(new java.awt.Color(201, 210, 216));
        if (publDateTxt.getText().equalsIgnoreCase("dd/mm/yyyy")) {
            publDateTxt.setText("");
            publDateTxt.setFont(new java.awt.Font("Segoe UI", 0, 12));
        }
    }//GEN-LAST:event_publDateTxtFocusGained


    private void titleTxtFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_titleTxtFocusLost
        if (!titleTxt.getText().equalsIgnoreCase("")) {
            browseNotify.setText("");
        }
        titleTxt.setBackground(new java.awt.Color(255, 255, 255));
    }//GEN-LAST:event_titleTxtFocusLost

    private void menuViewLogActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuViewLogActionPerformed
        this.setVisible(false);
        ViewLog viewLog = new ViewLog();
        viewLog.setVisible(true);
    }//GEN-LAST:event_menuViewLogActionPerformed

    private void menuLogoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuLogoutActionPerformed
        try {
            LogHandler.insertActivityLog("User " + User.getUserid() + " "
                    + User.getName() + " " + User.getSurname() + " has logged off");
            User.clearValues();
        } catch (SQLException ex) {
            Logger.getLogger(MenuAdmin.class.getName()).log(Level.SEVERE, null, ex);
        }
        this.setVisible(false);
        Initiator init = new Initiator();
        init.setVisible(true);
    }//GEN-LAST:event_menuLogoutActionPerformed

    private void menuFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuFileActionPerformed

    }//GEN-LAST:event_menuFileActionPerformed

    private void menuLendStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_menuLendStateChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_menuLendStateChanged

    private void menuLendMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_menuLendMouseEntered

    }//GEN-LAST:event_menuLendMouseEntered

    private void menuLendActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuLendActionPerformed
        this.setVisible(false);
        LendBook lendBook = new LendBook();
        lendBook.setVisible(true);
    }//GEN-LAST:event_menuLendActionPerformed

    private void menuReturnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuReturnActionPerformed
        this.setVisible(false);
        ReturnBook returnBook = new ReturnBook();
        returnBook.setVisible(true);
    }//GEN-LAST:event_menuReturnActionPerformed

    private void menuInsertActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuInsertActionPerformed

    }//GEN-LAST:event_menuInsertActionPerformed

    private void menuSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuSearchActionPerformed
        this.setVisible(false);
        ViewBooks viewBooks = new ViewBooks();
        viewBooks.setVisible(true);
    }//GEN-LAST:event_menuSearchActionPerformed

    private void menuBooksMenuSelected(javax.swing.event.MenuEvent evt) {//GEN-FIRST:event_menuBooksMenuSelected

    }//GEN-LAST:event_menuBooksMenuSelected

    private void menuBooksMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_menuBooksMouseEntered

    }//GEN-LAST:event_menuBooksMouseEntered

    private void menuBooksActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuBooksActionPerformed

    }//GEN-LAST:event_menuBooksActionPerformed

    private void menuAuthorInsertActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuAuthorInsertActionPerformed
        this.setVisible(false);
        InsertAuthor insAuth = new InsertAuthor();
        insAuth.setVisible(true);
    }//GEN-LAST:event_menuAuthorInsertActionPerformed

    private void menuViewAuthorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuViewAuthorActionPerformed
        this.setVisible(false);
        ViewAuthors viewAuthors = new ViewAuthors();
        viewAuthors.setVisible(true);
    }//GEN-LAST:event_menuViewAuthorActionPerformed

    private void menuUserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuUserActionPerformed
        this.setVisible(false);
        InsertUser insUser = new InsertUser();
        insUser.setVisible(true);
    }//GEN-LAST:event_menuUserActionPerformed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        this.setVisible(false);
        ViewUsers viewUsers = new ViewUsers();
        viewUsers.setVisible(true);
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void menuUsersActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuUsersActionPerformed

    }//GEN-LAST:event_menuUsersActionPerformed

    private void jMenuItem4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem4ActionPerformed
        dialogAbout.setLocationRelativeTo(this);
        dialogAbout.setVisible(true);
    }//GEN-LAST:event_jMenuItem4ActionPerformed

    private void buttonOKActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonOKActionPerformed
        dialogAbout.dispose();
    }//GEN-LAST:event_buttonOKActionPerformed

    private void insertBtnMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_insertBtnMouseEntered
        insertBtn.setBackground(new java.awt.Color(193, 81, 135));
        insertBtn.setFont(new java.awt.Font("Segoe UI", 1, 12));
    }//GEN-LAST:event_insertBtnMouseEntered

    private void insertBtnMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_insertBtnMouseExited
        insertBtn.setBackground(new java.awt.Color(255, 255, 255));
        insertBtn.setFont(new java.awt.Font("Segoe UI", 0, 12));
    }//GEN-LAST:event_insertBtnMouseExited

    private void resetBtnMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_resetBtnMouseEntered
        resetBtn.setFont(new java.awt.Font("Segoe UI", 1, 12));
        resetBtn.setBackground(new java.awt.Color(201, 210, 216));
    }//GEN-LAST:event_resetBtnMouseEntered

    private void resetBtnMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_resetBtnMouseExited
        resetBtn.setFont(new java.awt.Font("Segoe UI", 0, 12));
        resetBtn.setBackground(new java.awt.Color(255, 255, 255));
    }//GEN-LAST:event_resetBtnMouseExited

    private void backBtnMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_backBtnMouseEntered
        backBtn.setBackground(new java.awt.Color(201, 210, 216));
        backBtn.setFont(new java.awt.Font("Segoe UI", 1, 12));
    }//GEN-LAST:event_backBtnMouseEntered

    private void backBtnMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_backBtnMouseExited
        backBtn.setBackground(new java.awt.Color(255, 255, 255));
        backBtn.setFont(new java.awt.Font("Segoe UI", 0, 12));
    }//GEN-LAST:event_backBtnMouseExited

    private void logOutBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_logOutBtnActionPerformed
        try {
            LogHandler.insertActivityLog("User " + User.getUserid() + " "
                    + User.getName() + " " + User.getSurname() + " has logged off");
            User.clearValues();
        } catch (SQLException ex) {
            Logger.getLogger(MenuAdmin.class.getName()).log(Level.SEVERE, null, ex);
        }
        this.setVisible(false);
        Initiator init = new Initiator();
        init.setVisible(true);
    }//GEN-LAST:event_logOutBtnActionPerformed

    private void isbnTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_isbnTxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_isbnTxtActionPerformed

    private void logOutBtnMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_logOutBtnMouseEntered
        logOutBtn.setBackground(new java.awt.Color(193, 81, 135));
    }//GEN-LAST:event_logOutBtnMouseEntered

    private void logOutBtnMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_logOutBtnMouseExited
        logOutBtn.setBackground(new java.awt.Color(156,193,194));
    }//GEN-LAST:event_logOutBtnMouseExited

    private void bookCatComboFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_bookCatComboFocusGained
        bookCatCombo.setBackground(new java.awt.Color(201, 210, 216));
    }//GEN-LAST:event_bookCatComboFocusGained

    private void bookCatComboFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_bookCatComboFocusLost
        bookCatCombo.setBackground(new java.awt.Color(255,255,255));
    }//GEN-LAST:event_bookCatComboFocusLost

    private void publHouseComboFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_publHouseComboFocusGained
        publHouseCombo.setBackground(new java.awt.Color(201,210,216));
    }//GEN-LAST:event_publHouseComboFocusGained

    private void publHouseComboFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_publHouseComboFocusLost
        publHouseCombo.setBackground(new java.awt.Color(255,255,255));
    }//GEN-LAST:event_publHouseComboFocusLost

    private void lendCatComboFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_lendCatComboFocusGained
        lendCatCombo.setBackground(new java.awt.Color(201, 210, 216));
    }//GEN-LAST:event_lendCatComboFocusGained

    private void lendCatComboFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_lendCatComboFocusLost
        lendCatCombo.setBackground(new java.awt.Color(255,255,255));
    }//GEN-LAST:event_lendCatComboFocusLost

    private void isbnTxtFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_isbnTxtFocusGained
        if(isbnNotify.getText().equalsIgnoreCase("")){
            isbnTxt.setBackground(new java.awt.Color(201, 210, 216));
        }
    }//GEN-LAST:event_isbnTxtFocusGained

    private void titleTxtFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_titleTxtFocusGained
        titleTxt.setBackground(new java.awt.Color(201, 210, 216));
    }//GEN-LAST:event_titleTxtFocusGained

    private void browseBtnMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_browseBtnMouseEntered
        browseBtn.setBackground(new java.awt.Color(201, 210, 216));
        browseBtn.setFont(new java.awt.Font("Segoe UI", 1, 12));
    }//GEN-LAST:event_browseBtnMouseEntered

    private void browseBtnMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_browseBtnMouseExited
        browseBtn.setBackground(new java.awt.Color(255, 255, 255));
        browseBtn.setFont(new java.awt.Font("Segoe UI", 0, 12));
    }//GEN-LAST:event_browseBtnMouseExited

    private void jTableAuthorsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableAuthorsMouseClicked
        if (jTableAuthors.getSelectedRow() != -1) {
            jTableAuthors.setSelectionForeground(new java.awt.Color(255,255,255));
         
        }
    }//GEN-LAST:event_jTableAuthorsMouseClicked

    private void stockSpinnerFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_stockSpinnerFocusGained
       
    }//GEN-LAST:event_stockSpinnerFocusGained

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {

        FlatLightLaf.setup();
        UIManager.put("Component.hideMnemonics", false);

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new InsertBook().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backBtn;
    private javax.swing.JComboBox<String> bookCatCombo;
    private javax.swing.JButton browseBtn;
    private javax.swing.JLabel browseNotify;
    private javax.swing.JButton buttonOK;
    private javax.swing.JDialog dialogAbout;
    private javax.swing.JButton insertBtn;
    private javax.swing.JLabel isbnNotify;
    private javax.swing.JTextField isbnTxt;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTableAuthors;
    private javax.swing.JLabel labelBrowse;
    private javax.swing.JLabel labelFullname;
    private javax.swing.JLabel labelImage;
    private javax.swing.JComboBox<String> lendCatCombo;
    private javax.swing.JButton logOutBtn;
    private javax.swing.JMenuItem menuAuthorInsert;
    private javax.swing.JMenu menuAuthors;
    private javax.swing.JMenuBar menuBar;
    private javax.swing.JMenu menuBooks;
    private javax.swing.JMenu menuFile;
    private javax.swing.JMenu menuHelp;
    private javax.swing.JMenuItem menuInsert;
    private javax.swing.JMenuItem menuLend;
    private javax.swing.JMenuItem menuLogout;
    private javax.swing.JMenuItem menuReturn;
    private javax.swing.JMenuItem menuSearch;
    private javax.swing.JMenuItem menuUser;
    private javax.swing.JMenu menuUsers;
    private javax.swing.JMenuItem menuViewAuthor;
    private javax.swing.JMenuItem menuViewLog;
    private javax.swing.JPanel panelAbout;
    private javax.swing.JTextField publDateTxt;
    private javax.swing.JComboBox<String> publHouseCombo;
    private javax.swing.JButton resetBtn;
    private javax.swing.JLabel stockNotify;
    private javax.swing.JSpinner stockSpinner;
    private javax.swing.JTextArea textAreaAbout;
    private javax.swing.JTextField titleTxt;
    // End of variables declaration//GEN-END:variables
}
